# test file

=================================
how to use 7-base_geometry.py
=================================

it has function called ``def integer_validator(self, name, value):``

Numbers
===================
integer_validator: validat the integer value

Import the file
::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

::

    >>> bg.integer_validator("my_int", -12) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

What if the value is float
::

    >>> bg.integer_validator("my_int", 12.8) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

Especial cases
::

    >>> bg.integer_validator("my_int") # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

::

    >>> bg.integer_validator("my_int", None) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

STRING and Invalid type check
===================================

::

    >>> bg.integer_validator("my_int", "12") # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

::

    >>> bg.integer_validator("my_int", [1, 4]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

::

    >>> bg.integer_validator("my_int", (2,)) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

::

    >>> bg.integer_validator("my_int", {1, 0}) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: my_int must be an integer

::

    >>> bg.integer_validator("my_int", 0) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

::

    >>> bg.integer_validator() # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test Area function
==============================

::

    >>> bg.area() # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    Exception: area() is not implemented
