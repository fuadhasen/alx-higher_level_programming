# 4-print_square test file

=============================
how to use 4-print_square.py
=============================

it has one function called ``print_square(size):``

Numbers
=================
'print_square' print square

in order to pass python naming restriction and get access to module
::

    >>> from importlib.machinery import SourceFileLoader
    >>> add_module = SourceFileLoader('4-print_square', './4-print_square.py').load_module()
    >>> print_square = add_module.print_square

Integer Size Test
::

    >>> print_square(4) # doctest: +ELLIPSIS
    ####
    ####
    ####
    ####

::

    >>> print_square(-4) # doctest: +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    ValueError: size must be >= 0

::

    >>> print_square(0)

Float Size Test
::

    >>> print_square(3.2) +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    TypeError: size must be an integer


::

    >>> print_square(-3.2) +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    TypeError: size must be an integer

now we tryna to consider special case
::

    >>> print_square() +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

::

    >>> print_square(None) +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square("4") +IGNORE_EXCEPTION_DETAIL, +ELLIPSIS
    Traceback (most recent call last):
    TypeError: size must be an integer
