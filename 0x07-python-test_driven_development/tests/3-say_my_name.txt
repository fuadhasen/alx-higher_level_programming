# 3-say_my_name test file

=============================
how to use 3-say_my_name.py
=============================

it has one function called ``say_my_name(first_name, last_name="")``

String
=================
'say_my_name' print string

in order to pass python naming restriction and get access to module
::

    >>> from importlib.machinery import SourceFileLoader
    >>> add_module = SourceFileLoader('3-say_my_name', './3-say_my_name.py').load_module()
    >>> say_my_name = add_module.say_my_name

::

    >>> say_my_name("John", "Smith")
    My name is John Smith

Second argument can be omitted 
::

    >>> say_my_name('smith') # doctest: +NORMALIZE_WHITESPACE
    My name is smith

::

    >>> say_my_name(None, 'smith') # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name('smith', None) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: last_name must be a string

Empty Input
::

    >>> say_my_name() # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Invalid Input
::

    >>> say_my_name(12, 'smith') # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name('smith', 12) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError: last_name must be a string
